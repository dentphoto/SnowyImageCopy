<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonitorAware</name>
    </assembly>
    <members>
        <member name="T:MonitorAware.Helper.BuiltinFunction">
            <summary>
            WPF built-in functions information
            </summary>
        </member>
        <member name="M:MonitorAware.Helper.BuiltinFunction.IsScalingSupported(System.Windows.Window)">
            <summary>
            Checks if scaling for Per-Monitor DPI is supported 
            </summary>
            <param name="window">Window class defined in the assembly</param>
            <returns>True if could not find any indication that built-in scaling is not supported</returns>
            <remarks>
            The prerequisites for built-in scaling are the following:
            * OS is Windows 10 Anniversary Update (Redstone 1) or newer.
            * Target framework of assembly is .NET Framework 4.6.2 or newer.
            * dpiAwareness in the application manifest is set to PerMonitor.
              (dpiAwareness value cannot be checked directly at run time.)
            
            In addition, if Switch.System.Windows.DoNotScaleForDpiChanges is specified in
            the application configuration, it will have the following effects:
            * True - DISABLE built-in scaling even if the above conditions are met.
            * False - ENABLE built-in scaling even if target framework is older than 4.6.2.
            </remarks>
        </member>
        <member name="T:MonitorAware.Helper.EnumAddition">
            <summary>
            Additional method for <see cref="T:System.Enum"/>
            </summary>
        </member>
        <member name="M:MonitorAware.Helper.EnumAddition.IsDefined(System.Type,System.String,System.StringComparison)">
            <summary>
            Checks if a specified string exists in the names of a specified Enum.
            </summary>
            <param name="enumType">Enum type</param>
            <param name="value">Source string</param>
            <param name="comparisonType">StringComparison option</param>
            <returns>True if exists</returns>
            <remarks>This method acts as Enum.IsDefined method added with StringComparison option.</remarks>
        </member>
        <member name="M:MonitorAware.Helper.EnumAddition.Parse(System.Type,System.String,System.StringComparison)">
            <summary>
            Converts a specified string to the equivalent object of a specified Enum.
            </summary>
            <param name="enumType">Enum type</param>
            <param name="value">Source string</param>
            <param name="comparisonType">StringComparison option</param>
            <returns>Result object of Enum</returns>
            <remarks>This method acts as Enum.Parse method added with StringComparison option.</remarks>
        </member>
        <member name="M:MonitorAware.Helper.EnumAddition.TryParse``1(System.String,``0@,System.StringComparison)">
            <summary>
            Converts a specified string to the equivalent object of a specified Enum.
            </summary>
            <typeparam name="TEnum">Enum type</typeparam>
            <param name="value">Source string</param>
            <param name="result">Result object of Enum</param>
            <param name="comparisonType">StringComparison option</param>
            <returns>True if converted successfully</returns>
            <remarks>This method acts as Enum.TryParse method added with StringComparison option.</remarks>
        </member>
        <member name="T:MonitorAware.Helper.OsVersion">
            <summary>
            OS version information
            </summary>
        </member>
        <member name="P:MonitorAware.Helper.OsVersion.IsVistaOrNewer">
            <summary>
            Whether OS is Windows Vista or newer
            </summary>
            <remarks>Windows Vista = version 6.0</remarks>
        </member>
        <member name="P:MonitorAware.Helper.OsVersion.IsEightOrNewer">
            <summary>
            Whether OS is Windows 8 or newer
            </summary>
            <remarks>Windows 8 = version 6.2</remarks>
        </member>
        <member name="P:MonitorAware.Helper.OsVersion.IsEightOneOrNewer">
            <summary>
            Whether OS is Windows 8.1 or newer
            </summary>
            <remarks>Windows 8.1 = version 6.3</remarks>
        </member>
        <member name="P:MonitorAware.Helper.OsVersion.IsRedstoneOneOrNewer">
            <summary>
            Whether OS is Windows 10 Anniversary Update (Redstone 1) or newer
            </summary>
            <remarks>Windows 10 Anniversary Update = version 10.0.14393</remarks>
        </member>
        <member name="T:MonitorAware.Helper.TargetFramework">
            <summary>
            Target framework (.NET Framework) information
            </summary>
        </member>
        <member name="M:MonitorAware.Helper.TargetFramework.GetFrameworkVersion">
            <summary>
            Gets target framework version of a calling assembly. 
            </summary>
            <returns>If succeeded, target framework version. If failed, null.</returns>
        </member>
        <member name="M:MonitorAware.Helper.TargetFramework.GetFrameworkVersion(System.Windows.Window)">
            <summary>
            Gets target framework version of the assembly which defines a specified Window class.
            </summary>
            <param name="window">Window class defined in the assembly</param>
            <returns>If succeeded, target framework version. If failed, null.</returns>
        </member>
        <member name="M:MonitorAware.Helper.TargetFramework.GetFrameworkVersion(System.Reflection.Assembly)">
            <summary>
            Gets target framework version of a specified assembly.
            </summary>
            <param name="assembly">Assembly to be checked</param>
            <returns>If succeeded, target framework version. If failed, null.</returns>
        </member>
        <member name="T:MonitorAware.Models.ColorProfileChangedEventArgs">
            <summary>
            Color profile changed event args
            </summary>
        </member>
        <member name="P:MonitorAware.Models.ColorProfileChangedEventArgs.OldPath">
            <summary>
            Old color profile path
            </summary>
        </member>
        <member name="P:MonitorAware.Models.ColorProfileChangedEventArgs.NewPath">
            <summary>
            New color profile path
            </summary>
        </member>
        <member name="M:MonitorAware.Models.ColorProfileChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="oldPath">Old color profile path</param>
            <param name="newPath">New color profile path</param>
        </member>
        <member name="T:MonitorAware.Models.ColorProfileChecker">
            <summary>
            Checks color profile.
            </summary>
        </member>
        <member name="M:MonitorAware.Models.ColorProfileChecker.GetColorProfilePath(System.Windows.Media.Visual)">
            <summary>
            Gets color profile file path used by the monitor to which a specified Window belongs.
            </summary>
            <param name="sourceVisual">Source Window</param>
            <returns>Color profile file path</returns>
        </member>
        <member name="T:MonitorAware.Models.Dpi">
            <summary>
            DPI information
            </summary>
            <remarks>
            This structure is based on the same structure of https://github.com/Grabacr07/XamClaudia
            </remarks>
        </member>
        <member name="F:MonitorAware.Models.Dpi.Default">
            <summary>
            Default DPI
            </summary>
        </member>
        <member name="P:MonitorAware.Models.Dpi.X">
            <summary>
            X-axis value of DPI
            </summary>
        </member>
        <member name="P:MonitorAware.Models.Dpi.Y">
            <summary>
            Y-axis value of DPI
            </summary>
        </member>
        <member name="M:MonitorAware.Models.Dpi.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="x">X-axis value</param>
            <param name="y">Y-axis value</param>
        </member>
        <member name="M:MonitorAware.Models.Dpi.op_Equality(MonitorAware.Models.Dpi,MonitorAware.Models.Dpi)">
            <summary>
            == Operator
            </summary>
            <param name="dpi1">Instance to compare</param>
            <param name="dpi2">Instance to compare</param>
            <returns>True if equal</returns>
        </member>
        <member name="M:MonitorAware.Models.Dpi.op_Inequality(MonitorAware.Models.Dpi,MonitorAware.Models.Dpi)">
            <summary>
            != Operator
            </summary>
            <param name="dpi1">Instance to compare</param>
            <param name="dpi2">Instance to compare</param>
            <returns>True if not equal</returns>
        </member>
        <member name="M:MonitorAware.Models.Dpi.Equals(MonitorAware.Models.Dpi)">
            <summary>
            Equals operator
            </summary>
            <param name="other">Other instance to compare</param>
            <returns>True if equal</returns>
        </member>
        <member name="M:MonitorAware.Models.Dpi.Equals(System.Object)">
            <summary>
            Equals operator
            </summary>
            <param name="other">Other instance to compare</param>
            <returns>True if equal</returns>
        </member>
        <member name="M:MonitorAware.Models.Dpi.GetHashCode">
            <summary>
            Gets hash code.
            </summary>
            <returns>Hash code for this structure</returns>
        </member>
        <member name="M:MonitorAware.Models.Dpi.ToString">
            <summary>
            Creates string representation.
            </summary>
            <returns>String containing X and Y values of this structure</returns>
        </member>
        <member name="E:MonitorAware.Models.Dpi.PropertyChanged">
            <summary>
            PropertyChanged event
            </summary>
        </member>
        <member name="T:MonitorAware.Models.DpiChangedEventArgs">
            <summary>
            DPI changed event args
            </summary>
        </member>
        <member name="P:MonitorAware.Models.DpiChangedEventArgs.OldDpi">
            <summary>
            Old DPI
            </summary>
        </member>
        <member name="P:MonitorAware.Models.DpiChangedEventArgs.NewDpi">
            <summary>
            New DPI
            </summary>
        </member>
        <member name="M:MonitorAware.Models.DpiChangedEventArgs.#ctor(MonitorAware.Models.Dpi,MonitorAware.Models.Dpi)">
            <summary>
            Constructor
            </summary>
            <param name="oldDpi">Old DPI</param>
            <param name="newDpi">New DPI</param>
        </member>
        <member name="T:MonitorAware.Models.DpiChecker">
            <summary>
            Checks DPI.
            </summary>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.IsPerMonitorDpiAware">
            <summary>
            Checks if current process is Per-Monitor DPI aware.
            </summary>
            <returns>True if Per-Monitor DPI aware</returns>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.GetDpiAwareness">
            <summary>
            Gets DPI awareness of current process.
            </summary>
            <returns>If succeeded, Nullable PROCESS_DPI_AWARENESS. If failed, null.</returns>
        </member>
        <member name="F:MonitorAware.Models.DpiChecker.SystemDpi">
            <summary>
            System DPI
            </summary>
            <remarks>System DPI will not change during run time.</remarks>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.GetSystemDpi(System.Windows.Media.Visual)">
            <summary>
            Gets system DPI.
            </summary>
            <param name="sourceVisual">Source Visual</param>
            <returns>DPI struct</returns>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.GetSystemDpi">
            <summary>
            Gets system DPI.
            </summary>
            <returns>DPI struct</returns>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.GetDpiFromVisual(System.Windows.Media.Visual)">
            <summary>
            Gets Per-Monitor DPI of the monitor to which a specified Window belongs.
            </summary>
            <param name="sourceVisual">Source Visual</param>
            <returns>DPI struct</returns>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.GetDpiFromRect(System.Windows.Rect)">
            <summary>
            Gets Per-Monitor DPI of the monitor to which a specified Rect belongs.
            </summary>
            <param name="sourceRect">Source Rect</param>
            <returns>DPI struct</returns>
        </member>
        <member name="M:MonitorAware.Models.DpiChecker.GetNotificationAreaDpi">
            <summary>
            Gets Per-Monitor DPI of the monitor in which the notification area is contained.
            </summary>
            <returns>DPI struct</returns>
        </member>
        <member name="M:MonitorAware.Models.Win32.NativeMacro.GetLoWord(System.UInt32)">
            <summary>
            Equivalent to LOWORD
            </summary>
            <param name="dword">Dword (unit)</param>
            <returns>Low-order Word (ushort)</returns>
        </member>
        <member name="M:MonitorAware.Models.Win32.NativeMacro.GetHiWord(System.UInt32)">
            <summary>
            Equivalent to HIWORD
            </summary>
            <param name="dword">Dword (uint)</param>
            <returns>High-order Word (ushort)</returns>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DEFAULTTO.MONITOR_DEFAULTTONULL">
            <summary>
            If no display monitor intersects, returns null.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DEFAULTTO.MONITOR_DEFAULTTOPRIMARY">
            <summary>
            If no display monitor intersects, returns a handle to the primary display monitor.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DEFAULTTO.MONITOR_DEFAULTTONEAREST">
            <summary>
            If no display monitor intersects, returns a handle to the display monitor that is nearest to the rectangle.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.PROCESS_DPI_AWARENESS.Process_DPI_Unaware">
            <summary>
            Not DPI aware
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.PROCESS_DPI_AWARENESS.Process_System_DPI_Aware">
            <summary>
            System DPI aware
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.PROCESS_DPI_AWARENESS.Process_Per_Monitor_DPI_Aware">
            <summary>
            Per-Monitor DPI aware
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DPI_TYPE.MDT_Effective_DPI">
            <summary>
            Effective DPI that incorporates accessibility overrides and matches what Desktop Window Manage (DWM) uses to scale desktop applications
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DPI_TYPE.MDT_Angular_DPI">
            <summary>
            DPI that ensures rendering at a compliant angular resolution on the screen, without incorporating accessibility overrides
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DPI_TYPE.MDT_Raw_DPI">
            <summary>
            Linear DPI of the screen as measured on the screen itself
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.MONITOR_DPI_TYPE.MDT_Default">
            <summary>
            Default DPI
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.SIZE_MAXHIDE">
            <summary>
            Some other window is maximized.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.SIZE_MAXIMIZED">
            <summary>
            The window has been maximized.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.SIZE_MAXSHOW">
            <summary>
            Some other window has been restored to its former size.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.SIZE_MINIMIZED">
            <summary>
            The window has been minimized.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.Win32.NativeMethod.SIZE_RESTORED">
            <summary>
            The window has been resized, but neither the SIZE_MINIMIZED nor SIZE_MAXIMIZED value applies.
            </summary>
        </member>
        <member name="T:MonitorAware.Models.WindowHandler">
            <summary>
            Handler for <see cref="T:System.Windows.Window"/>
            </summary>
        </member>
        <member name="T:MonitorAware.Models.WindowHandler.WindowStatus">
            <summary>
            Status of a <see cref="T:System.Windows.Window"/>
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.WindowStatus.None">
            <summary>
            A Window stands still.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.WindowStatus.LocationChanged">
            <summary>
            A Window's location is being changed.
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.WindowStatus.SizeChanged">
            <summary>
            A Window's size is being changed.
            </summary>
        </member>
        <member name="T:MonitorAware.Models.WindowHandler.WindowInfo">
            <summary>
            DPI and other information on a <see cref="T:System.Windows.Window"/>
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.IsPerMonitorDpiAware">
            <summary>
            Whether target Window is Per-Monitor DPI aware (readonly)
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.SystemDpi">
            <summary>
            System DPI (readonly)
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.MonitorDpi">
            <summary>
            Per-Monitor DPI of current monitor (public readonly)
            </summary>
            <remarks>This property cannot become a binding target because it has no public setter.</remarks>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.MonitorDpiPropertyKey">
            <summary>
            Dependency property key for <see cref="P:MonitorAware.Models.WindowHandler.MonitorDpi"/>
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.MonitorDpiProperty">
            <summary>
            Dependency property for <see cref="P:MonitorAware.Models.WindowHandler.MonitorDpi"/>
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.WindowDpi">
            <summary>
            Per-Monitor DPI of target Window (public readonly)
            </summary>
            <remarks>This property cannot become a binding target because it has no public setter.</remarks>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.WindowDpiPropertyKey">
            <summary>
            Dependency property key for <see cref="P:MonitorAware.Models.WindowHandler.WindowDpi"/>
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.WindowDpiProperty">
            <summary>
            Dependency property for <see cref="P:MonitorAware.Models.WindowHandler.WindowDpi"/>
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.WillForbearScalingIfUnnecessary">
            <summary>
            Whether to forbear scaling if it is unnecessary because built-in scaling is enabled
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.ForbearScaling">
            <summary>
            Whether to forbear scaling
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.ForbearScalingProperty">
            <summary>
            Dependency property for <see cref="P:MonitorAware.Models.WindowHandler.ForbearScaling"/>
            </summary>
        </member>
        <member name="P:MonitorAware.Models.WindowHandler.ColorProfilePath">
            <summary>
            Color profile path of target Window (public readonly)
            </summary>
            <remarks>This property cannot become a binding target because it has no public setter.</remarks>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.ColorProfilePathPropertyKey">
            <summary>
            Dependency property key for <see cref="P:MonitorAware.Models.WindowHandler.ColorProfilePath"/>
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler.ColorProfilePathProperty">
            <summary>
            Dependency property for <see cref="P:MonitorAware.Models.WindowHandler.ColorProfilePath"/>
            </summary>
        </member>
        <member name="E:MonitorAware.Models.WindowHandler.DpiChanged">
            <summary>
            DPI changed event
            </summary>
            <remarks>This event is fired when DPI of target Window is changed. It is not necessarily the same timing
            when DPI of the monitor to which target Window belongs is changed.</remarks>
        </member>
        <member name="E:MonitorAware.Models.WindowHandler.ColorProfileChanged">
            <summary>
            Color profile path changed event
            </summary>
            <remarks>This event is fired when color profile path of the monitor to which target Window belongs has
            changed and Window's move/resize which caused the change has exited.</remarks>
        </member>
        <member name="M:MonitorAware.Models.WindowHandler.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MonitorAware.Models.WindowHandler.#ctor(System.Windows.Window,System.Windows.FrameworkElement)">
            <summary>
            Constructor
            </summary>
            <param name="window">Target Window</param>
            <param name="element">Target FrameworkElement</param>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._targetWindow">
            <summary>
            Target Window
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._targetElement">
            <summary>
            Target FrameworkElement which will be transformed when DPI changed
            </summary>
            <remarks>If this FrameworkElement is null, Window.Content will be transformed.</remarks>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._targetSource">
            <summary>
            HwndSource of target Window
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._dueInfo">
            <summary>
            Information that target Window due to be
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._currentStatus">
            <summary>
            Current status of target Window
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._baseSize">
            <summary>
            Size of target Window to be the base for calculating due size when DPI changed
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._isEnteredSizeMove">
            <summary>
            Whether target Window's location or size has started to be changed
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._isDpiChanged">
            <summary>
            Whether DPI has changed after target Window's location or size has started to be changed
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._countLocationChanged">
            <summary>
            Count of WM_MOVE messages
            </summary>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._countSizeChanged">
            <summary>
            Count of WM_SIZE messages
            </summary>
        </member>
        <member name="M:MonitorAware.Models.WindowHandler.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window messages.
            </summary>
            <param name="hwnd">The window handle</param>
            <param name="msg">The message ID</param>
            <param name="wParam">The message's wParam value</param>
            <param name="lParam">The message's lParam value</param>
            <param name="handled">Whether the message was handled</param>
            <returns>Return value depending on the particular message</returns>
            <remarks>This is an implementation of System.Windows.Interop.HwndSourceHook.</remarks>
        </member>
        <member name="F:MonitorAware.Models.WindowHandler._blocker">
            <summary>
            Object to block entering into change DPI process
            </summary>
            <remarks>
            Null:   Don't block.
            Object: Block.
            </remarks>
        </member>
        <member name="T:MonitorAware.Views.MonitorAwareBehavior">
            <summary>
            Behavior to make a <see cref="T:System.Windows.Window"/> Per-Monitor DPI aware
            </summary>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareBehavior.OnAttached">
            <summary>
            OnAttached
            </summary>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareBehavior.OnDetaching">
            <summary>
            OnDetaching
            </summary>
        </member>
        <member name="P:MonitorAware.Views.MonitorAwareBehavior.WindowHandler">
            <summary>
            Handler for <see cref="T:System.Windows.Window"/>
            </summary>
        </member>
        <member name="P:MonitorAware.Views.MonitorAwareBehavior.WillForbearScalingIfUnnecessary">
            <summary>
            Whether to forbear scaling if it is unnecessary because built-in scaling is enabled
            </summary>
        </member>
        <member name="T:MonitorAware.Views.MonitorAwareProperty">
            <summary>
            Attached property to make a <see cref="T:System.Windows.Window"/> Per-Monitor DPI aware
            </summary>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareProperty.CreateInstanceCore">
            <summary>
            Implements <see cref="M:System.Windows.Freezable.CreateInstanceCore">Freezable.CreateInstanceCore</see>.
            </summary>
            <returns>New Freezable</returns>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareProperty.GetAttachedProperty(System.Windows.Window)">
            <summary>
            Gets AttachedProperty.
            </summary>
            <param name="window">Owner <see cref="T:System.Windows.Window"/></param>
            <returns>AttachedProperty</returns>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareProperty.SetAttachedProperty(System.Windows.Window,MonitorAware.Views.MonitorAwareProperty)">
            <summary>
            Sets AttachedProperty.
            </summary>
            <param name="window">Owner <see cref="T:System.Windows.Window"/></param>
            <param name="attachedProperty">AttachedProperty</param>
        </member>
        <member name="F:MonitorAware.Views.MonitorAwareProperty.AttachedPropertyProperty">
            <summary>
            Attached property for AttachedProperty
            </summary>
        </member>
        <member name="P:MonitorAware.Views.MonitorAwareProperty.WindowHandler">
            <summary>
            Handler for <see cref="T:System.Windows.Window"/>
            </summary>
        </member>
        <member name="P:MonitorAware.Views.MonitorAwareProperty.WillForbearScalingIfUnnecessary">
            <summary>
            Whether to forbear scaling if it is unnecessary because built-in scaling is enabled
            </summary>
        </member>
        <member name="T:MonitorAware.Views.MonitorAwareWindow">
            <summary>
            Per-Monitor DPI aware window
            </summary>
        </member>
        <member name="P:MonitorAware.Views.MonitorAwareWindow.WindowHandler">
            <summary>
            Handler for <see cref="T:System.Windows.Window"/>
            </summary>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareWindow.OnSourceInitialized(System.EventArgs)">
            <summary>
            OnSourceInitialized
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MonitorAware.Views.MonitorAwareWindow.OnClosed(System.EventArgs)">
            <summary>
            OnClosed
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:MonitorAware.Views.MonitorAwareWindow.WillForbearScalingIfUnnecessary">
            <summary>
            Whether to forbear scaling if it is unnecessary because built-in scaling is enabled
            </summary>
        </member>
    </members>
</doc>
